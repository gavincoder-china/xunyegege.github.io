(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{268:function(a,s,t){"use strict";t.r(s);var r=t(38),n=Object(r.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("div",[a._v("欢迎大家加入我的github项目,一起学习，一起发展")]),a._v(" "),t("h1",{attrs:{id:"分布式微服务专栏001-springboot的核心配置与注解详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式微服务专栏001-springboot的核心配置与注解详解","aria-hidden":"true"}},[a._v("#")]),a._v(" 分布式微服务专栏001(springboot的核心配置与注解详解)")]),a._v(" "),t("h3",{attrs:{id:"初识springboot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初识springboot","aria-hidden":"true"}},[a._v("#")]),a._v(" 初识springboot")]),a._v(" "),t("p",[a._v("1为什么使用springboot")]),a._v(" "),t("p",[a._v("简单，效率高，约定大于配置,可以用java -jar的方式来启动，可以独立部署")]),a._v(" "),t("h4",{attrs:{id:"pom文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pom文件","aria-hidden":"true"}},[a._v("#")]),a._v(" pom文件")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("starter"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("parent\n定义：依赖的版本控制器\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("starter\n定义：导入某个场景所需要的所有依赖\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("spring"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("maven"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("plugin\n定义：使springboot可以打包成jar包，并且可以用java "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("jar 启动\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("application"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("properties\n定义：核心配置文件（端口号，数据库等等）\n描述：有两种类型分别是properties和yml 当同时出现两者 springboot优先读取properties\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@SpringBootApplication\n定义：核心配置类 其中包含\n-@SpringBootConfiguration\n定义：通过@Component知道SpringBoot专用的 注入到spring容器 \n-@EnableAutoConfiguration 其中包含\n--@AutoConfigurationPackage 其中包含\n定义：\n---@Import({Registrar.class})\n定义：spring底层注解表示导入类 这里导入Registrar类 \nRegistrar类中帮我们把 被@SpringBootApplication修饰的类所在路径以及其子路径注入到spring容器中\n\n@Import({EnableAutoConfigurationImportSelector.class})\n定义从META-INF/spring.factories路径下 以全类名的方式注入到容器中完成了自动配置 \n@ComponentScan\n定义：添加springboot扫描的路径，把我们需要注入的路径给添加进去\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br")])]),t("h2",{attrs:{id:"ioc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ioc","aria-hidden":"true"}},[a._v("#")]),a._v(" IOC")]),a._v(" "),t("blockquote",[t("p",[a._v("控制反转,首先去考虑的是控制正转,我们平时使用的方法是控制正转,那么反转就是将对象的控制权交由Spring容器去管理")])]),a._v(" "),t("h2",{attrs:{id:"di"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#di","aria-hidden":"true"}},[a._v("#")]),a._v(" DI")]),a._v(" "),t("blockquote",[t("p",[a._v("创建对象的过程中Spring可以依据配置对象的属性进行设置，这个过程称之为依赖注入,如注解@autowired\nspring依赖注入说的是对象依赖spring容器帮你实例化(注入)，所以很多人会把spring当作一个大的实例工厂，它帮程序生成并注入对象")])]),a._v(" "),t("h2",{attrs:{id:"springboot框架面试相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springboot框架面试相关","aria-hidden":"true"}},[a._v("#")]),a._v(" springboot框架面试相关")]),a._v(" "),t("p",[a._v("1什么是springboot？")]),a._v(" "),t("blockquote",[t("p",[a._v("springboot是一种能够零配置快速搭建spring项目运行环境的框架,他是对Spring的再度封装.")])]),a._v(" "),t("p",[a._v("2什么叫约定大于配置")]),a._v(" "),t("blockquote",[t("p",[a._v("开发逻辑任务重要性大于环境配置")])]),a._v(" "),t("p",[a._v("3springboot可以用什么命令来启动")]),a._v(" "),t("blockquote",[t("p",[a._v("mvn package")]),a._v(" "),t("p",[a._v("进入jar包所在目录下")]),a._v(" "),t("p",[a._v("java -jar xxx.jar")])]),a._v(" "),t("p",[a._v("4springboot的核心配置文件是什么，有几种类型的写法，分别是哪两种，并解释下两种写法的语法区别")]),a._v(" "),t("blockquote",[t("p",[a._v("application.properties")]),a._v(" "),t("p",[a._v("properties   kv结构")]),a._v(" "),t("p",[a._v("yml     目录结构")])]),a._v(" "),t("p",[a._v("5springboot的核心类是哪个？")]),a._v(" "),t("blockquote",[t("p",[a._v("xxxApplication.java")])]),a._v(" "),t("p",[a._v("6核心类中有个什么注解，这个注解里有含有哪三个注解，分别解释下这三个注解的含义")]),a._v(" "),t("blockquote",[t("p",[a._v("@SpringBootApplication")]),a._v(" "),t("blockquote",[t("p",[a._v("@SpringBootConfiguration")]),a._v(" "),t("p",[a._v("--其中包含一个@component注解,是SpringBoot专用的注入Spring容器的注解")])]),a._v(" "),t("blockquote",[t("p",[a._v("@EnableAutoConfiguration")]),a._v(" "),t("p",[a._v("-@AutoConfigurationPackage")]),a._v(" "),t("blockquote",[t("p",[a._v("将被@SpringBootApplication注解的类的所在路径及其子路径注入到spring容器中")])]),a._v(" "),t("p",[a._v("-@Import({EnableAutoConfigurationImportSelector.class})")]),a._v(" "),t("blockquote",[t("p",[a._v("将我们所需要的配置文件以全类名的方式注入到spring容器中")])])]),a._v(" "),t("blockquote",[t("p",[a._v("@ComponentScan")]),a._v(" "),t("blockquote",[t("p",[a._v("添加SpringBoot的扫描路径,将需要注入的路径添加进去")])])])]),a._v(" "),t("p",[a._v("7在springboot中starter是什么")]),a._v(" "),t("blockquote",[t("p",[a._v("导入某个场景所需要的全部依赖,比如web环境,测试环境下所需要的依赖包")])]),a._v(" "),t("p",[a._v("8在springboot中为什么可以不用写版本号")]),a._v(" "),t("blockquote",[t("p",[a._v("因为他有spring-boot-starter-parent ,也就是依赖版本控制器")])]),a._v(" "),t("p",[a._v("9springboot默认打包成什么包")]),a._v(" "),t("blockquote",[t("p",[a._v("默认打成jar包,用java -jar xxx.jar方法启动")])]),a._v(" "),t("p",[a._v("10 如何添加一个扫描spring组件的注解")]),a._v(" "),t("blockquote",[t("p",[a._v('@componentScan({"路径","路径"})')])]),a._v(" "),t("p",[a._v("11你认为springboot的优点是什么")]),a._v(" "),t("blockquote",[t("p",[a._v("简单，效率高，约定大于配置,可以用java -jar的方式来启动，可以独立部署")])]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])},[],!1,null,null,null);s.default=n.exports}}]);